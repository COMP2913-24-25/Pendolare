name: Publish wiki

on:
  push:
    branches: [dev]

concurrency:
  group: publish-wiki
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  publish-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Prepare Wiki Files
        run: |
          mkdir -p wiki

          # Initialize sidebar
          echo "### [[Home]]" > wiki/_Sidebar.md
          echo "" >> wiki/_Sidebar.md
          echo "### Documentation" >> wiki/_Sidebar.md
          echo "* [[DevGuide]]" >> wiki/_Sidebar.md
          
          # Add meeting minutes dynamically to sidebar
          echo "" >> wiki/_Sidebar.md
          echo "### Meeting of Minutes" >> wiki/_Sidebar.md
          find wiki/Meeting\ Minutes -type f -name "*.md" | grep -v "Retrospective" | sort | while read file; do
            name=$(basename "$file" .md)
            echo "* [[${name}]]" >> wiki/_Sidebar.md
          done
          
          # Add retrospective sprint minutes to sidebar
          echo "" >> wiki/_Sidebar.md
          echo "### Meeting of Retrospective Sprint" >> wiki/_Sidebar.md
          find wiki/Meeting\ Minutes -type f -name "*Retrospective*.md" | sort | while read file; do
            name=$(basename "$file" .md)
            echo "* [[${name}]]" >> wiki/_Sidebar.md
          done

          # Initialize service sections in sidebar
          echo "" >> wiki/_Sidebar.md
          echo "### Frontend Services" >> wiki/_Sidebar.md
          echo "" >> wiki/_Sidebar.md
          echo "### Backend Services" >> wiki/_Sidebar.md

          # Create Home.md with meeting minutes sections
          echo "# Services" > wiki/Home.md
          echo "" >> wiki/Home.md
          
          # Add regular meeting minutes section
          echo "## Meeting of Minutes" >> wiki/Home.md
          echo "" >> wiki/Home.md
          find wiki/Meeting\ Minutes -type f -name "*.md" | grep -v "Retrospective" | sort | while read file; do
            name=$(basename "$file" .md)
            url_safe_name=$(echo "$name" | sed 's/ /-/g')
            wiki_link="https://github.com/COMP2913-24-25/software-engineering-project-team-2/wiki/${url_safe_name}"
            echo "- [${name}](${wiki_link})" >> wiki/Home.md
          done
          
          # Add retrospective sprint minutes section
          echo "" >> wiki/Home.md
          echo "## Meeting of Retrospective Sprint" >> wiki/Home.md
          echo "" >> wiki/Home.md
          find wiki/Meeting\ Minutes -type f -name "*Retrospective*.md" | sort | while read file; do
            name=$(basename "$file" .md)
            url_safe_name=$(echo "$name" | sed 's/ /-/g')
            wiki_link="https://github.com/COMP2913-24-25/software-engineering-project-team-2/wiki/${url_safe_name}"
            echo "- [${name}](${wiki_link})" >> wiki/Home.md
          done
          
          echo "" >> wiki/Home.md
          echo "## Frontend Software" >> wiki/Home.md
          echo "" >> wiki/Home.md
          echo "## Backend Software" >> wiki/Home.md
          echo "" >> wiki/Home.md

          FRONTEND_SERVICES=("Pendo.ClientApp" "Pendo.AdminDashboard")

          find . -type f -path '*/README.md' ! -path "./wiki/*" | while read file; do
            folder_name=$(dirname "$file" | sed 's|./||')
            base_name=$(basename "$folder_name")

            if [[ "$base_name" != Pendo.* ]]; then
              formatted_name="Pendo.$base_name"
            else
              formatted_name="$base_name"
            fi

            new_file="wiki/${formatted_name}.md"
            cp "$file" "$new_file"

            wiki_link="https://github.com/COMP2913-24-25/software-engineering-project-team-2/wiki/${formatted_name}"

            # Add to appropriate sidebar section
            if [[ " ${FRONTEND_SERVICES[@]} " =~ " ${formatted_name} " ]]; then
              sed -i "/^### Frontend Services/a * [[${formatted_name}]]" wiki/_Sidebar.md
              sed -i "/^## Frontend Software/a - [${formatted_name}](${wiki_link})" wiki/Home.md
            else
              sed -i "/^### Backend Services/a * [[${formatted_name}]]" wiki/_Sidebar.md
              sed -i "/^## Backend Software/a - [${formatted_name}](${wiki_link})" wiki/Home.md
            fi

            # Process API routes
            API_JSON="wiki/Api Routes/${formatted_name}.json"
            if [[ -f "$API_JSON" ]]; then
              echo "" >> "$new_file"
              echo "## API Routes" >> "$new_file"
              echo "" >> "$new_file"
              echo "| Method | Endpoint | Summary |" >> "$new_file"
              echo "|--------|----------|----------|" >> "$new_file"
              
              jq -r '
                select(type == "object") |
                .paths // {} |
                to_entries[] |
                .key as $endpoint |
                .value | to_entries[] |
                [ .key, $endpoint, (.value.summary // "No summary provided") ] |
                @tsv
              ' "$API_JSON" | while IFS=$'\t' read -r method endpoint summary; do
                echo "| \`$method\` | **$endpoint** | $summary |" >> "$new_file"
              done
            fi
          done

      - name: Debug Wiki Structure
        run: ls -R wiki

      - name: Publish Wiki
        uses: Andrew-Chen-Wang/github-wiki-action@v4
        with:
          path: wiki

name: Pendo-MessageService
description: "Build and test the Message Service project"

on:
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'Pendo.MessageService/**'
      - '.github/workflows/Pendo.MessageService.yml'
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

permissions:
  id-token: write
  contents: write
  issues: read
  checks: write
  pull-requests: write

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.WF_PAT }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./Pendo.MessageService
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -r requirements-test.txt

    - name: Test project
      working-directory: ./Pendo.MessageService
      run: pytest -xvs tests/ --cov=src --cov-report=term-missing --junitxml=message_test_results.xml

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        check_name: Message Service Test Results
        files: ./Pendo.MessageService/messsage_test_results.xml

    - name: Update Wiki
      if: always() && github.event_name != 'pull_request'
      run: |
        chmod +x ./scripts/parse-unittests.py
        python ./scripts/parse-unittests.py \
          --service MessageService \
          --report ./Pendo.MessageService/messsage_test_results.xml \
          --wiki-file wiki/Tests.md
      
    - name: Checkout Wiki
      if: always() && github.event_name != 'pull_request'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add wiki/Tests.md
        git commit -m "AUTO COMMIT: update Message Service test list"
        git push
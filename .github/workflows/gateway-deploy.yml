name: Deploy Kong Gateway to Azure

on:
  pull_request:
    branches: 
      - main
      - dev
      - project/api-gateway
      - infrastructure/kong-integration
    paths:
      - 'Pendo.ApiGateway/**'
      - 'infrastructure/**'
  workflow_dispatch:

env:
  ACR_NAME: pendocontainerregistry
  KONG_IMAGE_NAME: kong-gateway
  RESOURCE_GROUP: dev
  CONTAINER_APP_NAME: kong-gateway

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: '0a6d7ce5-4951-4af8-932a-94714dd9e70b'
          tenant-id: '0adc3547-e686-4727-9a4c-0c5bb6699047'
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # Get the Identity Service FQDN
      - name: Get Identity Service FQDN
        id: identity_fqdn
        run: |
          IDENTITY_FQDN=$(az containerapp show --name pendo-identity-service --resource-group ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
          echo "IDENTITY_SERVICE_FQDN=$IDENTITY_FQDN" >> $GITHUB_ENV
          echo "::set-output name=fqdn::$IDENTITY_FQDN"
      
      # Update the kong-azure.yml configuration with the real FQDN
      - name: Update Kong Azure Config
        run: |
          if [ -n "${{ steps.identity_fqdn.outputs.fqdn }}" ]; then
            # Replace the placeholder with the actual FQDN
            sed -i "s|pendo-identity-service.greensand-8499b34e.uksouth.azurecontainerapps.io|${{ steps.identity_fqdn.outputs.fqdn }}|g" Pendo.ApiGateway/kong/declarative/kong-azure.yml
            echo "Updated Kong config with Identity Service FQDN: ${{ steps.identity_fqdn.outputs.fqdn }}"
          else
            echo "Warning: Could not retrieve Identity Service FQDN"
          fi

      # Build and push with the updated configuration
      - name: Build and push image to ACR
        env:
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
        run: |
          # Copy the Azure config in place of the regular config for the docker build
          cp Pendo.ApiGateway/kong/declarative/kong-azure.yml Pendo.ApiGateway/kong/declarative/kong.yml
          
          docker login ${{ env.ACR_NAME }}.azurecr.io -u $ACR_USERNAME -p $ACR_PASSWORD
          cd Pendo.ApiGateway
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.KONG_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.KONG_IMAGE_NAME }}:${{ github.sha }}
          docker tag ${{ env.ACR_NAME }}.azurecr.io/${{ env.KONG_IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_NAME }}.azurecr.io/${{ env.KONG_IMAGE_NAME }}:latest
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.KONG_IMAGE_NAME }}:latest

      - name: Deploy Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az deployment group create \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --template-file infrastructure/gateway-service.bicep \
              --parameters \
                containerAppName=${{ env.CONTAINER_APP_NAME }} \
                containerAppEnvironmentName=pendo-env-dev \
                registryName=${{ env.ACR_NAME }} \
                registryUsername=${{ secrets.ACR_USERNAME }} \
                registryPassword=${{ secrets.ACR_PASSWORD }}
      
      # After deploying, ensure the Kong configuration is properly set
      - name: Test Kong API Gateway routes
        run: |
          # Get the Kong Gateway FQDN
          KONG_FQDN=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
          
          echo "Kong Gateway is deployed at: $KONG_FQDN"
          echo "Waiting for Kong to become available..."
          sleep 45
          
          echo "Testing Kong Gateway ping endpoint..."
          curl -i -X GET https://$KONG_FQDN/api/ping || echo "Ping endpoint not responding yet"
          
          echo "Testing Kong Gateway admin API..."
          curl -i https://$KONG_FQDN/admin-api || echo "Admin API not responding yet"
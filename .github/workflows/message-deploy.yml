name: Deploy Message Service to Azure

on:
  pull_request:
    branches: 
      - main
      - dev
      - project/message-service
    paths:
      - 'Pendo.MessageService/**'
      - 'infrastructure/**'
  workflow_dispatch:

env:
  ACR_NAME: pendocontainerregistry
  MESSAGE_SERVICE_IMAGE_NAME: message-service
  RESOURCE_GROUP: dev
  CONTAINER_APP_NAME: message-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v2

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: '0a6d7ce5-4951-4af8-932a-94714dd9e70b'
        tenant-id: '0adc3547-e686-4727-9a4c-0c5bb6699047'
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true

    # Get Kong Gateway FQDN
    - name: Get Kong Gateway FQDN
      id: kong_fqdn
      run: |
        KONG_FQDN=$(az containerapp show --name kong-gateway --resource-group ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
        echo "KONG_GATEWAY_FQDN=$KONG_FQDN" >> $GITHUB_ENV
        echo "::set-output name=fqdn::$KONG_FQDN"

    - name: Build and push image to ACR
      env:
        ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
      run: |
        docker login ${{ env.ACR_NAME }}.azurecr.io -u $ACR_USERNAME -p $ACR_PASSWORD
        cd Pendo.MessageService
        docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.MESSAGE_SERVICE_IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.MESSAGE_SERVICE_IMAGE_NAME }}:${{ github.sha }}
        docker tag ${{ env.ACR_NAME }}.azurecr.io/${{ env.MESSAGE_SERVICE_IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_NAME }}.azurecr.io/${{ env.MESSAGE_SERVICE_IMAGE_NAME }}:latest
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.MESSAGE_SERVICE_IMAGE_NAME }}:latest

    - name: Deploy Container App
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file infrastructure/message-service.bicep \
            --parameters \
              containerAppName=${{ env.CONTAINER_APP_NAME }} \
              containerAppEnvironmentName=pendo-env-dev \
              registryName=${{ env.ACR_NAME }} \
              registryUsername=${{ secrets.ACR_USERNAME }} \
              registryPassword=${{ secrets.ACR_PASSWORD }} \
              kongGatewayFqdn=${{ steps.kong_fqdn.outputs.fqdn }}
    
    # Wait for message service to be ready
    - name: Wait for service to be ready
      run: |
        echo "Waiting for message-service to be ready..."
        sleep 30

    # Get Message Service FQDN 
    - name: Get Message Service FQDN
      id: message_fqdn
      run: |
        MESSAGE_FQDN=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query properties.configuration.ingress.fqdn -o tsv)
        echo "MESSAGE_SERVICE_FQDN=$MESSAGE_FQDN" >> $GITHUB_ENV
        echo "::set-output name=fqdn::$MESSAGE_FQDN"

    # Configure Kong Gateway to properly route to Message Service with correct FQDN
    - name: Configure Kong Gateway Routes
      uses: azure/CLI@v1
      with:
        inlineScript: |
          MESSAGE_SERVICE_FQDN="${{ steps.message_fqdn.outputs.fqdn }}"
          KONG_GATEWAY_FQDN="${{ steps.kong_fqdn.outputs.fqdn }}"
          
          echo "Updating Kong Gateway Configuration..."
          echo "Message Service FQDN: $MESSAGE_SERVICE_FQDN"
          echo "Kong Gateway FQDN: $KONG_GATEWAY_FQDN"
          
          # Delete existing service if it exists (to ensure clean update)
          curl -s -i -X DELETE https://$KONG_GATEWAY_FQDN/admin-api/services/message-service || true
          
          # Create message-service in Kong with correct HTTPS URL
          curl -i -X POST https://$KONG_GATEWAY_FQDN/admin-api/services \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"message-service\",\"url\":\"https://$MESSAGE_SERVICE_FQDN\"}"
          
          # Add WebSocket route with proper headers
          curl -i -X POST https://$KONG_GATEWAY_FQDN/admin-api/services/message-service/routes \
            -H "Content-Type: application/json" \
            -d "{\"name\":\"message-ws-route\",\"paths\":[\"/message/ws\"],\"protocols\":[\"http\",\"https\"],\"headers\":{\"Upgrade\":[\"websocket\"],\"Connection\":[\"Upgrade\"]},\"strip_path\":false}"

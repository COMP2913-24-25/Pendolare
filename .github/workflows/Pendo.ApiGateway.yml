name: Pendo-ApiGateway
description: "Build and test the API Gateway and custom plugins"

on:
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'Pendo.ApiGateway/**'
      - '.github/workflows/Pendo.ApiGateway.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Lua
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: "5.1"

    - name: Setup LuaRocks
      uses: leafo/gh-actions-luarocks@v4

    - name: Install Kong dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev
        luarocks install lua_cliargs || true
        luarocks install luasystem || true
        luarocks install dkjson || true
        luarocks install say || true
        luarocks install luassert || true
        luarocks install lua-term || true
        luarocks install luafilesystem || true
        luarocks install penlight || true
        luarocks install mediator_lua || true
        luarocks install busted || true
        luarocks install datafile || true
        luarocks install luacov || true
        luarocks install cjson || true
        luarocks install lua-path || true
        luarocks install luasocket || true
        luarocks install luasec || true
        luarocks install lua-resty-http || true

    - name: Setup Kong test environment
      working-directory: ./Pendo.ApiGateway
      run: |
        mkdir -p spec/fixtures
        mkdir -p pids logs
        cp kong/plugins/jwt-custom-claims/spec/fixtures/custom_nginx.template spec/fixtures/ || true
        chmod +x spec/run.sh || true

    - name: Test API Gateway plugins
      working-directory: ./Pendo.ApiGateway
      run: |
        # Create a mock helpers module to run standalone tests
        mkdir -p spec/helpers
        cat > spec/helpers/init.lua << 'EOF'
        local _M = {}
        function _M.get_db_utils() 
          return {
            services = { insert = function() return {} end },
            routes = { insert = function() return {} end },
            plugins = { insert = function() return {} end }
          }
        end
        function _M.start_kong() return true end
        function _M.stop_kong() return true end
        function _M.proxy_client() 
          return {
            get = function() return {status = 200, body = '{"headers":{}}' } end,
            post = function() return {status = 200, body = '{"headers":{}, "json":{}}' } end,
            close = function() end
          }
        end
        return _M
        EOF
        
        # Run the tests with output in JUnit format
        busted -v --output=junit -o apigateway_test_results.xml kong/plugins/jwt-custom-claims/spec

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        check_name: API Gateway Test Results
        files: ./Pendo.ApiGateway/apigateway_test_results.xml

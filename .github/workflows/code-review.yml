name: SonarCloud PR Analysis

on:
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    name: Run SonarCloud analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Required for better SonarCloud analysis

    # Language detection steps
    - name: Detect project type
      id: detect
      run: |
        if [ -f "*.csproj" ]; then
          echo "project_type=dotnet" >> $GITHUB_OUTPUT
        elif [ -f "package.json" ]; then
          echo "project_type=nodejs" >> $GITHUB_OUTPUT
        elif [ -f "requirements.txt" ]; then
          echo "project_type=python" >> $GITHUB_OUTPUT
        else
          echo "project_type=unknown" >> $GITHUB_OUTPUT
        fi

    # .NET setup and analysis
    - name: Set up .NET
      if: steps.detect.outputs.project_type == 'dotnet'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0'

    - name: Install .NET dependencies
      if: steps.detect.outputs.project_type == 'dotnet'
      run: dotnet restore

    - name: Install .NET SonarScanner
      if: steps.detect.outputs.project_type == 'dotnet'
      run: dotnet tool install --global dotnet-sonarscanner

    # Node.js setup and analysis
    - name: Set up Node.js
      if: steps.detect.outputs.project_type == 'nodejs'
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Node.js dependencies
      if: steps.detect.outputs.project_type == 'nodejs'
      run: npm install

    # Python setup and analysis
    - name: Set up Python
      if: steps.detect.outputs.project_type == 'python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      if: steps.detect.outputs.project_type == 'python'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Install SonarCloud scanner
    - name: Install SonarCloud scanner
      if: steps.detect.outputs.project_type != 'dotnet'
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
        unzip sonar-scanner-cli-4.7.0.2747-linux.zip
        echo "$PWD/sonar-scanner-4.7.0.2747-linux/bin" >> $GITHUB_PATH

    # Run SonarCloud analysis based on project type
    - name: SonarCloud .NET Analysis
      if: steps.detect.outputs.project_type == 'dotnet'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin /k:"pendo_carsharing" /o:"your-organization" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build
        dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: SonarCloud JS/Python Analysis
      if: steps.detect.outputs.project_type == 'nodejs' || steps.detect.outputs.project_type == 'python'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=pendo_carsharing \
          -Dsonar.organization=your-organization \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}

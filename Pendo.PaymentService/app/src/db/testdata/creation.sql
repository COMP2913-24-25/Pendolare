-- Create schemas first
IF NOT EXISTS (SCHEMA [identity])
    EXEC('CREATE SCHEMA [identity]')
GO

IF NOT EXISTS (SCHEMA [journey])
    EXEC('CREATE SCHEMA [journey]')
GO

IF NOT EXISTS (SCHEMA [booking])
    EXEC('CREATE SCHEMA [booking]')
GO

IF NOT EXISTS (SCHEMA [payment])
    EXEC('CREATE SCHEMA [payment]')
GO

-- User Table
CREATE TABLE [identity].[User]
(
  [UserId] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWSEQUENTIALID(),
  [Email] NVARCHAR(255) UNIQUE NOT NULL,
  [FirstName] NVARCHAR(255) NULL,
  [LastName] NVARCHAR(255) NULL,
  [UserRating] FLOAT NOT NULL DEFAULT -1,
  [UserTypeId] INT NOT NULL,
  [CreateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
  [UpdateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE()
)

-- Journey Table
CREATE TABLE [journey].[Journey]
(
  [JourneyId] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWSEQUENTIALID(),
  [UserId] UNIQUEIDENTIFIER NOT NULL,
  [AdvertisedPrice] DECIMAL(18,8) NOT NULL,
  [CurrencyCode] CHAR(3) NOT NULL DEFAULT 'GBP',
  [StartName] NVARCHAR(100) NOT NULL,
  [StartLong] FLOAT NOT NULL,
  [StartLat] FLOAT NOT NULL,
  [EndName] NVARCHAR(100) NOT NULL,
  [EndLong] FLOAT NOT NULL,
  [EndLat] FLOAT NOT NULL,
  [JourneyType] INT NOT NULL DEFAULT 1,
  [StartDate] DATETIME2 NOT NULL,
  [RepeatUntil] DATETIME2 NOT NULL,
  [Recurrance] NVARCHAR(100) NULL,
  [StartTime] DATETIME2 NOT NULL,
  [JourneyStatusId] INT NOT NULL DEFAULT 1,
  [MaxPassengers] INT NOT NULL,
  [RegPlate] NVARCHAR(100) NOT NULL,
  [BootWidth] FLOAT NULL,
  [BootHeight] FLOAT NULL,
  [CreateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
  [UpdateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
  [LockedUntil] DATETIME2 NULL,

  CONSTRAINT FK_Journeys_UserId FOREIGN KEY ([UserId])
  REFERENCES [identity].[User](UserId)
)

-- Booking Table
CREATE TABLE [booking].[Booking]
(
  [BookingId] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWSEQUENTIALID(),
  [UserId] UNIQUEIDENTIFIER NOT NULL,
  [JourneyId] UNIQUEIDENTIFIER NOT NULL,
  [BookingStatusId] INT NOT NULL,
  [FeeMargin] DECIMAL(18, 8) NOT NULL,
  [RideTime] DATETIME2 NOT NULL,
  [DriverApproval] BIT NOT NULL DEFAULT 0,
  [CreateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
  [UpdateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),

  CONSTRAINT FK_Booking_User FOREIGN KEY ([UserId]) 
  REFERENCES [identity].[User](UserId),

  CONSTRAINT FK_Booking_Journey FOREIGN KEY ([JourneyId]) 
  REFERENCES [journey].[Journey](JourneyId)
)

-- BookingAmendment Table
CREATE TABLE [booking].[BookingAmendment]
(
  [BookingAmmendmentId] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWSEQUENTIALID(),
  [BookingId] UNIQUEIDENTIFIER NOT NULL,
  [ProposedPrice] DECIMAL(18, 8) NULL,
  [StartName] NVARCHAR(MAX) NULL,
  [StartLong] FLOAT NULL,
  [StartLat] FLOAT NULL,
  [EndName] NVARCHAR(MAX) NULL,
  [EndLong] FLOAT NULL,
  [EndLat] FLOAT NULL,
  [StartTime] DATETIME2 NULL,
  [CancellationRequest] BIT NOT NULL DEFAULT 0,
  [DriverApproval] BIT NOT NULL DEFAULT 0,
  [PassengerApproval] BIT NOT NULL DEFAULT 0,
  [CreateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),
  [UpdateDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),

  CONSTRAINT FK_BookingAmendment_Booking FOREIGN KEY ([BookingId])
  REFERENCES [booking].[Booking](BookingId)
)

-- Payment Related Tables
CREATE TABLE [payment].[UserBalance]
(
  [BalanceId] UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWSEQUENTIALID(),
  [UserId] UNIQUEIDENTIFIER NOT NULL,
  [Pending] DECIMAL(18,8) NOT NULL DEFAULT 0,
  [NonPending] DECIMAL(18,8) NOT NULL DEFAULT 0,
  [UpdatedDate] DATETIME2 NOT NULL DEFAULT GETUTCDATE(),

  CONSTRAINT FK_UserBalance_UserId FOREIGN KEY ([UserId])
  REFERENCES [identity].[User](UserId)
)